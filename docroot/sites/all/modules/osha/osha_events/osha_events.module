<?php
/**
 * @file
 * Code for the OSHA Events feature.
 */

include_once 'osha_events.features.inc';

/**
 * Implements hook_form_alter().
 */

function osha_events_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'events_node_form') {
    // Activity field changes
    if (isset($form['field_activity'][LANGUAGE_NONE][0])) {
      unset($form['field_activity'][LANGUAGE_NONE]['add_more']);
      // Extract the field field tree to change cardinality
      $field = $form['field_activity'][LANGUAGE_NONE][0]['tid'];

      // Show the label as usual
      unset($field['#title_display']);

      // Field is not required, so add also an empty option.
      $field['#required'] = FALSE;
      $field['#options'] = array('' => t('- None -')) + $field['#options'];
      // Switch validator
      $field['#element_validate'] = array('options_field_widget_validate');

      $form['field_activity'][LANGUAGE_NONE] = $field;
    }
  }
}

/**
 * Implements hook_form_views_exposed_form_alter().
 */
function osha_events_form_views_exposed_form_alter(&$form, &$form_state) {
  // CW-1085 Default date now for start date in views filter.
  if ($form['#id'] == 'views-exposed-form-events-index-page') {
    $form['field_start_date_value']['#date_format'] = 'd/m/Y';
    $form['field_start_date_value2']['#date_format'] = 'd/m/Y';
    if (empty($form_state['input'])) {
      $date = new DateTime('now');
      $form_state['input']['field_start_date_value']['date'] = $date->format('d/m/Y');
      // Set the get value to prevent a bug in pager
      // See ticket CW-1438 and Drupal bug: www.drupal.org/node/1415306
      $_GET['field_start_date_value']['date'] = $date->format('d/m/Y');
    }
  }elseif($form['#id'] == 'views-exposed-form-events-search-page-1' || $form['#id'] == 'views-exposed-form-events-search-page') {
    // Add Events Calendar filter just after search exposed filter
    if($form['#id'] == 'views-exposed-form-events-search-page-1'){
      $block = block_load('views','events-block_1');
    }elseif($form['#id'] == 'views-exposed-form-events-search-page'){
      $block = block_load('views','events-block_2');
    }
    $events_calendar = drupal_render(_block_get_renderable_array(_block_render_blocks(array($block))));
    $form['events_calendar'] = array(
      '#type' => 'markup',
      '#markup' => $events_calendar,
    );
  }
}


/**
 * Implements hook_element_info_alter().
 */
function osha_events_element_info_alter(&$type) {
  $type['date_popup']['#process'][] = 'osha_events_popup_date_process';
}

/**
 * Implements hook_date_popup_pre_validate_alter().
 */
function osha_events_popup_date_process($element, &$form_state, $form) {
  $element['#element_validate'] = array('osha_events_popup_date_validate');
  return $element;
}


function osha_events_popup_date_validate($element, &$form_state, $form) {
  if ($element['#name'] == 'field_start_date[und][0][value]') {
    list($date_format, $time_format) = explode(" ", $element['#date_format']);
    $element['#date_format'] = trim($date_format);
    if (empty($form_state['input']['field_start_date'][LANGUAGE_NONE][0]['value']['time'])) {
      $form_state['input']['field_start_date'][LANGUAGE_NONE][0]['value']['time'] = '00:00';
    }
  }
  if ($element['#name'] == 'field_start_date[und][0][value2]') {
    list($date_format, $time_format) = explode(" ", $element['#date_format']);
    $element['#date_format'] = trim($date_format);
    if (empty($form_state['input']['field_start_date'][LANGUAGE_NONE][0]['value2']['time'])) {
      $form_state['input']['field_start_date'][LANGUAGE_NONE][0]['value2']['time'] = '00:00';
    }
  }
  date_popup_validate($element, $form_state);
}

/**
 * Altering Date Popup to remove labels and description for specific field
 */
function osha_events_date_popup_process_alter(&$element, &$form_state, $context) {
  if ($element['#name'] == 'field_start_date_value' || $element['#name'] == 'field_start_date_value2') {
    //unset($element['date']['#description']);
    unset($element['date']['#title']);
  }
}

/**
 * Implements hook_osha_tmgmt_i18n_string_list().
 */
function osha_events_osha_tmgmt_i18n_string_list() {
  module_load_include('inc', 'osha_events', 'osha_events.translations');
  return osha_events_get_translatable_strings();
}


/**
 * Implements hook_user_role_insert().
 */
function osha_events_user_role_insert($role) {
  if ($role->name == 'Events Editor') {
    user_role_grant_permissions($role->rid, array(
      'access contextual links',
      'access dashboard',

      'create files',
      'view own private files',
      'view own files',
      'view files',

      'edit own image files',
      'edit any image files',
      'delete own image files',
      'download own image files',
      'download any image files',

      'use text format full_html',
      'use text format filtered_html',

      'access media browser',

      'edit meta tags',
      'access content',
      'view own unpublished content',
      'view revisions',

      'create events content',
      'edit own events content',
      'edit any events content',
      'delete own events content',
      'delete any events content',

      'create url aliases',
      'access administration pages',
      'view the administration theme',
    ));
  }
}

/**
 * Implements hook_views_pre_render().
 *
 * {@inheritdoc}
 */
function osha_events_views_pre_render(&$view) {
  if ($view->name == 'events' && in_array($view->current_display, array('block_1', 'block_2'))) {
    $month = '';
    $current_year = date('Y', time());

    foreach ($view->result as $key => $result) {
      $row_month = format_date(strtotime($result->field_field_start_date[0]['raw']['value']), 'custom', 'M');
      $row_month_raw = date('m', strtotime($result->field_field_start_date[0]['raw']['value']));
      $row_year = date('Y', strtotime($result->field_field_start_date_1[0]['raw']['value']));

      // Remove from display if start date is in the same month.
      if ($month == $row_month) {
        unset($view->result[$key]);
        continue;
      }
      $month = $row_month;

      $path = $view->current_display == 'block_1'? 'past-events':'events';

      // Add a css class to selected month
      $class = $class_year = '';
      $url_params = drupal_get_query_parameters($_GET, array('search_api_views_fulltext', 'q'));
      if(isset($url_params['f'][0]) && strpos($url_params['f'][0], 'field_start_date') !== FALSE){
        if(substr($url_params['f'][0],  -7) == $row_year . '-' . $row_month_raw){
          $class = 'current_month';
        }elseif(substr($url_params['f'][0],  -4) == $row_year){
          $class_year = 'current_year';
        }
      }

      // Overwrite month value with a link to search page
      $result->field_field_start_date[0]['rendered']['#markup']
        = l($row_month, $path, array(
          'query' => array('f' => array(
                0 => urlencode('field_start_date:') . 'value:' . $row_year . '-' . $row_month_raw,
              )
            ),
           'attributes' => array(
             'class' => array($class),
           ),
          )
        );

      // Overwrite year values with a link to search page
      $result->field_field_start_date_1[0]['rendered']['#markup']
          = l($row_year, $path, array(
              'query' => array('f' => array(
                  0 => urlencode('field_start_date:') . 'value:' . $row_year,
              )
              ),
              'attributes' => array(
                  'class' => array($class_year),
              ),
          )
      );
    }
  }

  // Breadcrumb and title for Monthly Posts.
  if ($view->name == 'events_search' && in_array($view->current_display, array('page', 'page_1'))) {
    $title = '';

    if(isset($view->exposed_input['f'])) {
      $pos = strpos($view->exposed_input['f'][0],':');
      $title = osha_events_get_view_title(substr($view->exposed_input['f'][0], $pos+1));
    }

    // Set view title.
    $view->build_info['title'] = $title;
    // Set view breadcrumb.
    drupal_set_breadcrumb(
      array(
        l(t('Media centre'), '<front>'),
        l(t('Events'), 'events'),
        $title,
      )
    );
  }
}

/**
 * Display custom title for monthly views.
 *
 * @return bool|null|string
 *   View's title.
 */
function osha_events_get_view_title($title) {
  if (preg_match('/([\d]{4}\-[\d]{2})/', $title)) {
    $title = date(
      'F Y',
      mktime(0, 0, 0, substr($title, 5, 2), 1, substr($title, 0, 4))
    );
    $title = t('@data events', array('@data' => $title));
  }
  return $title;
}
